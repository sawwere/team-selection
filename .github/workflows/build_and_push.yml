name: Build and push application image

on:
  push:
    branches: [ "master" ]
    paths:
      - 'src/**'
      - '.github/workflows/build_and_push.yml'


jobs:
  build_and_test:
    runs-on: ubuntu-latest
    name: Build
    environment: Deploy
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      packages: write
      pull-requests: write
      contents: write
      repository-projects: write

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: maven build
        working-directory: .
        run: mvn -am package

      - name: Run tests
        working-directory: .
        run: mvn -am verify

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: .github/badges
          generate-branches-badge: true
          generate-summary: true

      - name: Log coverage percentages to workflow output
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branches = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit and push the coverage badges and summary file
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd .github/badges
          if [[ `git status --porcelain *.svg *.json` ]]; then
            git config --global user.name 'github-actions'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add *.svg *.json
            git commit -m "Autogenerated JaCoCo coverage badges" *.svg *.json
            git push
          fi

      - name: Comment on PR with coverage percentages
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          REPORT=$(<badges/coverage-summary.json)
          COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
          BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
          NEWLINE=$'\n'
          BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
          gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to docker.io
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin

      - name: Build application image
        run:  docker build -t $LOGIN/$NAME:latest .

      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:latest
